"""
Django settings for testsite project.

Generated by 'django-admin startproject' using Django 4.2.21.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-=o)wbm1q#ai1x_jmf5ykf3&x+p&^b0$*mfgc%%@jaq4gy*a+15'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_delete_all',  # Your package
    'testapp',  # Test app
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'testsite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'testsite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Add this to your Django settings.py for testing django-delete-all

# Django Delete All Configuration
DJANGO_DELETE_ALL = {
    # Enable/disable the package globally
    'ENABLED': True,

    # Allow usage in production (BE VERY CAREFUL!)
    'PRODUCTION_ENABLED': False,

    # Apps that are completely excluded from deletion
    'EXCLUDED_APPS': [
        'auth',  # User authentication
        'admin',  # Django admin
        'contenttypes',  # Content types framework
        'sessions',  # User sessions
        'messages',  # Message framework
        'staticfiles',  # Static files
    ],

    # Specific models to exclude (format: 'app_label.ModelName')
    'EXCLUDED_MODELS': [
        # 'myapp.ImportantModel',
    ],

    # Maximum objects that can be deleted in a single operation
    # Set higher for testing, lower for production
    'MAX_OBJECTS_WITHOUT_CONFIRMATION': 100,  # Default: 100

    # Show confirmation for deletions above this count
    'REQUIRE_CONFIRMATION_ABOVE': 10,  # Default: 10

    # Enable audit logging of all deletion operations
    'AUDIT_DELETIONS': True,  # Default: True

    # Create backup before deletion (future feature)
    'BACKUP_BEFORE_DELETE': False,  # Default: False
}

# For testing with small limits, use:
# DJANGO_DELETE_ALL = {
#     'MAX_OBJECTS_WITHOUT_CONFIRMATION': 5,
#     'REQUIRE_CONFIRMATION_ABOVE': 2,
# }

# Logging configuration for django-delete-all
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
        'file': {
            'class': 'logging.FileHandler',
            'filename': 'django_delete_all.log',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django_delete_all.safety': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}

# Enable logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django_delete_all.safety': {
            'handlers': ['console'],
            'level': 'INFO',
        },
    },
}